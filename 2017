from __future__ import division
import MySQLdb
import numpy as np
import random
import re
from time import gmtime, strftime
from datetime import datetime
import matplotlib.pyplot as plt
from collections import Counter

conn = MySQLdb.connect(host = "localhost", user = "root", passwd = "dealer1073.",
                       db = "aetos", port = 3306, charset = "utf8")
cur = conn.cursor(cursorclass = MySQLdb.cursors.DictCursor)
cur.execute('select * from client_statement')
lines = cur.fetchall()

symbol_index = ['audusd','eurusd','gbpusd','usdjpy','usdcad','usdchf','nzdusd',
                'audcad','audchf','audjpy','audnzd','cadchf','cadjpy','chfjpy',
                'euraud','eurcad','eurchf','eurgbp','eurjpy','eurnzd','gbpaud',
                'gbpchf','gbpcad','gbpjpy','gbpnzd','nzdjpy','xauusd','xagusd',
                'usoil','us30','nas100','spx500','copper','dxy','others']

volume_index = [[] for i in range(len(symbol_index))]

for line in lines:
    volume_index[symbol_index.index(line['Symbol'])].append(line['Volume'])

for i in range(len(volume_index)):
    volume_index[i] = [sum(float(k.encode('utf')) for k in volume_index[i])]   

symbol_volume = dict(zip(symbol_index,volume_index))

for k,v in symbol_volume.items():
    if v == [0]:
        del symbol_volume[k]

labels = symbol_volume.keys()
sizes = symbol_volume.values()

colors_material = ['yellowgreen','gold','lightskyblue',
                   'lightcoral','red','teal','aqua','skyblue',
                   'wheat','pink','crimson','plum','darkblue',
                   'slateblue','cyan','snow','lightcoral','sienna',
                   'navy','thistle','lavender','orange']
colors = []
color_index = random.sample(colors_material,len(symbol_volume))


for i in range(len(symbol_volume)):
           colors.append(color_index[i])


fig1, ax1 = plt.subplots()
ax1.pie(sizes, labels=labels, colors = colors,autopct='%1.1f%%',
        shadow=True, startangle=90)
ax1.axis('equal')  # Equal aspect ratio ensures that pie is drawn as a circle.

#plt.title('Volume Allocation', bbox={'facecolor':'0.8', 'pad':5})

plt.show()


