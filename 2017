from __future__ import division
import MySQLdb
import numpy as np
import random
import re
from time import gmtime, strftime
from datetime import datetime
import matplotlib.pyplot as plt
from collections import Counter

conn = MySQLdb.connect(host = "localhost", user = "root", passwd = "dealer1073.",
                       db = "aetos", port = 3306, charset = "utf8")
cur = conn.cursor(cursorclass = MySQLdb.cursors.DictCursor)

client = raw_input('Please Enter the Client That You Would Like to Check:\t')
cur.execute("select * from closed_trade where Login = %r " % (client))

#cur.execute('select * from client_statement')
lines = cur.fetchall()

symbol_index = ['audusd','eurusd','gbpusd','usdjpy','usdcad','usdchf','nzdusd',
                'audcad','audchf','audjpy','audnzd','cadchf','cadjpy','chfjpy',
                'euraud','eurcad','eurchf','eurgbp','eurjpy','eurnzd','gbpaud',
                'gbpchf','gbpcad','gbpjpy','gbpnzd','nzdjpy','xauusd','xagusd',
                'usoil','us30','nas100','spx500','copper','dxy','others']

volume_index = [[] for i in range(len(symbol_index))]


for line in lines:
    if line['Symbol'] in symbol_index:
        volume_index[symbol_index.index(line['Symbol'])].append(line['Volume'])
    else:
        volume_index[symbol_index.index('others')].append(line['Volume'])

for i in range(len(volume_index)):
    volume_index[i] = [sum(float(k.encode('utf')) for k in volume_index[i])]

symbol_volume = dict(zip(symbol_index,volume_index))

def drop_outliers(data,population,m = 2):
    data = [i for i in data if i < sum(population)/100]
    return data

for k,v in symbol_volume.items():
    if v == [0]:
        del symbol_volume[k]

sizes_t = symbol_volume.values()
labels_t = [i[0] for i in symbol_volume.keys()]
sizes_tem = sorted(sizes_t,reverse = True)

sizes =sorted([sum(i) for i in sizes_t],reverse = True)

#sizes = sorted(sizes_t,reverse = True)

labels = []
for i in range(len(sizes)):
    labels.append(labels_t[sizes_t.index(sizes_tem[i])])




colors_material = ['yellowgreen','gold','lightskyblue',
                   'lightcoral','red','teal','mediumpurple','skyblue',
                   'wheat','pink','crimson','plum','salmon',
                   'slateblue','cyan','snow','lightcoral','lime',
                   'navy','thistle','lavender','orange']
colors = random.sample(colors_material,len(symbol_volume))


patches,texts = plt.pie(sizes,colors = colors, startangle = 90)
plt.legend(patches,labels,loc = 'best')
plt.axis('equal')
plt.tight_layout()

'''
fig1, ax1 = plt.subplots()
ax1.pie(sizes, labels=labels, colors = colors,#autopct='%1.1f%%',
        startangle=90)
'''


#plt.title('Volume Allocation', bbox={'facecolor':'0.8', 'pad':5})

plt.show()





