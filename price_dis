import MySQLdb
import matplotlib.pyplot as plt
from collections import Counter
from collections import defaultdict

conn = MySQLdb.connect(host = "localhost", user = "root", passwd = "dealer1073.", db = "aetos", port = 3306, charset = "utf8")
cur = conn.cursor(cursorclass = MySQLdb.cursors.DictCursor)

cur.execute("select * from orders where Symbol = 'eurusd' and Type = 'Sell'")


#symbol_name = raw_input('Please Enter the Symbol Name:\t')
#order_type = raw_input('Please Enter the Order Type:\t')
#cur.execute("select * from orders where Symbol = '%s' and Type = '%s'" % (symbol_name,order_type))

lines = cur.fetchall()

op_t,vol_t = ([] for i in range(2))
for line in lines:
    op_t.append(line['OpenPrice'])
    vol_t.append(line['Volume'])

op = [float(i.encode('utf')) for i in op_t]
vol = [float(i.encode('utf')) for i in vol_t]

unique_price = []
for item,count in Counter(op).most_common():
    if count ==1:
        unique_price.append(item)
        
unique_price_ordered = []
for i in range(len(op)):
    if op[i] in unique_price:
        unique_price_ordered.append(op[i])

duplicate_price = list(set(op) - set(unique_price))
unique_index = [i for i,e in enumerate(op) if e in unique_price]

unique_volume = [vol[i] for i in unique_index]

up_dis = {}
for i in range(len(unique_price_ordered)):
    up_dis.update({unique_price_ordered[i]:unique_volume[i]})

#get unique price and volume dict!!

for i in range(len(duplicate_price)):
    duplicate_index =[v for v,k in enumerate(op) if k == duplicate_price[i]]

#get duplicate price and its index so far

price_dis = {}

for i in range(len(op)):
    if op[i] not in price_dis.keys():
            price_dis.update({op[i]:vol[i]})
            for j in range(len(op)):
                if op[i] == op[j] and i != j:
                    vol[i] = vol[i] + vol[j]
                price_dis.update({op[i]:vol[i]})
'''
for i in range(len(op)):
    if op[i] not in price_dis.keys():
            price_dis.update({op[i]:vol[i]})
    for j in range(len(op)):
        if op[i] == op[j] and i != j:
            vol[i] = vol[i] + vol[j]
            print op[i],vol[i]
price_dis.update({op[i]:vol[i]})

(wrong sample)
'''
print price_dis

cur.close()
conn.close()
